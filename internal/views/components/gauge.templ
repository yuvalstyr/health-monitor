package components

import (
	"fmt"
	"health-monitor/internal/db"
)

templ GaugeValue(gauge *db.Gauge, value float64) {
	<div id={ fmt.Sprintf("gauge-value-%d", gauge.ID) } class="space-y-1 sm:space-y-2">
		<div class="flex justify-between items-baseline">
			<div class={ "text-3xl sm:text-4xl font-bold transition-all", templ.KV("text-primary", value <= gauge.Target), templ.KV("text-error animate-pulse", value > gauge.Target) }>
				{ fmt.Sprintf("%.1f", value) }
				<span class="text-sm sm:text-base font-normal text-base-content/60 ml-1">{ gauge.Unit }</span>
			</div>
			<div class="text-xs sm:text-sm text-base-content/60">
				Target: { fmt.Sprintf("%.1f", gauge.Target) }
				<span class="hidden sm:inline">{ gauge.Unit }</span>
			</div>
		</div>
		<div class="w-full h-1.5 sm:h-2 bg-base-200/50 rounded-full overflow-hidden">
			<div 
				class={ "h-full rounded-full transition-all", templ.KV("bg-primary", value <= gauge.Target), templ.KV("bg-error", value > gauge.Target) }
				style={ fmt.Sprintf("width: %d%%", min(int(value/gauge.Target*100), 100)) }
			></div>
		</div>
		<div class="text-xs text-base-content/40 hidden sm:block">
			{ fmt.Sprintf("%d%% of target", min(int(value/gauge.Target*100), 100)) }
		</div>
	</div>
}

templ GaugeCard(gauge *db.Gauge) {
	<div class="card bg-base-100 shadow-xl hover:shadow-2xl transition-all group">
		<div class="card-body p-3 sm:p-6">
			// Header with icon and menu
			<div class="flex justify-between items-start">
				<div class="flex items-center gap-2 sm:gap-3">
					<div class={ "p-2 sm:p-3 rounded-xl transition-all", templ.KV("bg-primary/10", gauge.Value <= gauge.Target), templ.KV("bg-error/10", gauge.Value > gauge.Target) }>
						@Icon(gauge.Icon, "w-5 h-5 sm:w-6 sm:h-6 text-primary group-hover:scale-110 transition-all")
					</div>
					<div>
						<h2 class="card-title text-base sm:text-lg mb-0 sm:mb-1">{ gauge.Name }</h2>
						if gauge.Description.Valid {
							<p class="text-xs sm:text-sm text-base-content/60 hidden sm:block">{ gauge.Description.String }</p>
						}
					</div>
				</div>
				<div class="dropdown dropdown-end">
					<label tabindex="0" class="btn btn-ghost btn-xs sm:btn-sm btn-circle opacity-50 hover:opacity-100">
						@Icon("more-vertical", "w-3 h-3 sm:w-4 sm:h-4")
					</label>
					<ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52">
						<li>
							<a href={ templ.URL(fmt.Sprintf("/admin/gauges/%d?source=gauge_button", gauge.ID)) } class="w-full flex items-center gap-2">
								@Icon("edit", "w-4 h-4")
								<span>Edit</span>
							</a>
						</li>
						<li>
							<button
								hx-delete={ fmt.Sprintf("/gauges/%d", gauge.ID) }
								hx-target="body"
								hx-swap="outerHTML"
								hx-push-url="/admin"
								hx-confirm="Are you sure you want to delete this gauge?"
								class="text-error">
								@Icon("trash", "w-4 h-4")
								<span>Delete</span>
							</button>
						</li>
					</ul>
				</div>
			</div>

			// Value display and progress
			<div id={ fmt.Sprintf("gauge-value-%d", gauge.ID) } class="mt-3 sm:mt-6">
				@GaugeValue(gauge, gauge.Value)
			</div>

			// Controls
			<div class="card-actions justify-center items-center mt-3 pt-3 sm:mt-4 sm:pt-4 border-t border-base-200">
				<div class="grid grid-cols-2 gap-6 w-full max-w-[180px]">
					<button
						hx-post={ fmt.Sprintf("/gauges/%d/decrement", gauge.ID) }
						hx-target={ fmt.Sprintf("#gauge-value-%d", gauge.ID) }
						hx-swap="innerHTML"
						class="btn btn-error btn-sm w-full font-bold">
						-
					</button>
					<button
						hx-post={ fmt.Sprintf("/gauges/%d/increment", gauge.ID) }
						hx-target={ fmt.Sprintf("#gauge-value-%d", gauge.ID) }
						hx-swap="innerHTML"
						class="btn btn-success btn-sm w-full font-bold">
						+
					</button>
				</div>
			</div>
		</div>
	</div>
}

templ Gauge(gauge *db.Gauge) {
	<div id={ fmt.Sprintf("gauge-%d", gauge.ID) } class="flex flex-col gap-6">
		<div id={ fmt.Sprintf("gauge-header-%d", gauge.ID) } class="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 bg-base-100 p-6 rounded-box shadow-lg">
			<div class="flex items-center gap-3">
				<div class="p-3 bg-primary/10 rounded-lg">
					@Icon(gauge.Icon, "w-8 h-8 text-primary")
				</div>
				<div>
					<h1 class="text-xl sm:text-2xl font-bold mb-1">{ gauge.Name }</h1>
					if gauge.Description.Valid {
						<p class="text-base-content/60 text-sm">{ gauge.Description.String }</p>
					}
				</div>
			</div>

			<div class="stats bg-base-200/50 shadow-sm rounded-box">
				<div class="stat px-6 py-3">
					<div class="stat-title text-xs uppercase tracking-wider opacity-60">Current</div>
					<div class="stat-value text-xl sm:text-2xl">{ fmt.Sprintf("%.1f", gauge.Value) }</div>
					<div class="stat-desc text-xs uppercase tracking-wider opacity-60">{ gauge.Unit }</div>
				</div>
				<div class="stat px-6 py-3 hidden sm:block">
					<div class="stat-title text-xs uppercase tracking-wider opacity-60">Target</div>
					<div class="stat-value text-xl sm:text-2xl">{ fmt.Sprintf("%.1f", gauge.Target) }</div>
					<div class="stat-desc text-xs uppercase tracking-wider opacity-60">{ gauge.Unit }</div>
				</div>
			</div>
		</div>

		<div id={ fmt.Sprintf("gauge-actions-%d", gauge.ID) } class="grid grid-cols-2 sm:grid-cols-4 gap-4 max-w-2xl mx-auto sm:mx-0">
			<button 
				class="btn btn-success w-full" 
				hx-post={ fmt.Sprintf("/gauges/%d/increment", gauge.ID) }
				hx-target={ fmt.Sprintf("#gauge-%d", gauge.ID) }
				hx-swap="outerHTML"
				hx-push-url="false"
			>
				<span class="text-lg mr-2">+</span>
				<span>Increment</span>
			</button>

			<button
				class="btn btn-error w-full"
				hx-post={ fmt.Sprintf("/gauges/%d/decrement", gauge.ID) }
				hx-target={ fmt.Sprintf("#gauge-%d", gauge.ID) }
				hx-swap="outerHTML"
				hx-push-url="false"
			>
				<span class="text-lg mr-2">-</span>
				<span>Decrement</span>
			</button>

			<a href={ templ.URL(fmt.Sprintf("/admin/gauges/%d", gauge.ID)) } class="btn btn-ghost w-full">
				<span>Edit</span>
			</a>

			<button
				class="btn btn-error w-full"
				hx-delete={ fmt.Sprintf("/admin/gauges/%d", gauge.ID) }
				hx-target={ fmt.Sprintf("#gauge-%d", gauge.ID) }
				hx-swap="outerHTML"
				hx-push-url="false"
				hx-confirm="Are you sure you want to delete this gauge?"
			>
				<span>Delete</span>
			</button>
		</div>
	</div>
}
