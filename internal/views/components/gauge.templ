package components

import (
	"fmt"
	"health-monitor/internal/models"
)

templ GaugeCard(gauge *models.Gauge, value float64) {
	<div class="gauge-card bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow duration-200">
		<h2 class="text-xl font-semibold mb-4 text-gray-800">{ gauge.Name }</h2>
		<div class="flex items-center justify-between mb-4">
			<span class="text-gray-600">Current Value:</span>
			<span class="text-2xl font-bold text-indigo-600">{ fmt.Sprintf("%.1f %s", value, gauge.Unit) }</span>
		</div>
		<div class="flex items-center justify-between mb-4">
			<span class="text-gray-600">Target:</span>
			<span class="text-lg text-gray-700">{ fmt.Sprintf("%.1f %s", gauge.Target, gauge.Unit) }</span>
		</div>
		<div class="relative pt-1">
			<div class="flex mb-2 items-center justify-between">
				<div>
					<span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-teal-600 bg-teal-200">
						Progress
					</span>
				</div>
				<div class="text-right">
					<span class="text-xs font-semibold inline-block text-teal-600">
						{ fmt.Sprintf("%.1f%%", value/gauge.Target*100) }
					</span>
				</div>
			</div>
			<div class="overflow-hidden h-2 mb-6 text-xs flex rounded bg-teal-200">
				<div style={ fmt.Sprintf("width: %.1f%%", min(value/gauge.Target*100, 100)) } class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-teal-500"></div>
			</div>
		</div>
		<div class="flex justify-between items-center space-x-4">
			<button
				class="flex-1 bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-4 rounded-lg shadow-md hover:shadow-lg transition-all duration-200 flex items-center justify-center space-x-2"
				hx-post={ fmt.Sprintf("/gauges/%d/decrement", gauge.ID) }
				hx-target="closest div.gauge-card"
				hx-swap="outerHTML"
			>
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
					<path fill-rule="evenodd" d="M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd" />
				</svg>
				<span>Decrease</span>
			</button>
			<button
				class="flex-1 bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-4 rounded-lg shadow-md hover:shadow-lg transition-all duration-200 flex items-center justify-center space-x-2"
				hx-post={ fmt.Sprintf("/gauges/%d/increment", gauge.ID) }
				hx-target="closest div.gauge-card"
				hx-swap="outerHTML"
			>
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
					<path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
				</svg>
				<span>Increase</span>
			</button>
		</div>
	</div>
}

func min(a, b float64) float64 {
	if a < b {
		return a
	}
	return b
}
