package components

import (
	"fmt"
	"health-monitor/internal/db"
)

templ GaugeCard(gauge *db.Gauge, value float64) {
	<div 
		class="card bg-base-100 shadow-xl transition-all hover:shadow-2xl"
		id={ fmt.Sprintf("gauge-%d", gauge.ID) }
	>
		<div class="card-body p-4 sm:p-6">
			<div class="flex items-center justify-between mb-4">
				<h2 class="card-title text-lg sm:text-xl">{ gauge.Name }</h2>
				<a 
					href={ templ.SafeURL(fmt.Sprintf("/admin/gauges/%d", gauge.ID)) }
					class="btn btn-outline btn-primary btn-sm sm:btn-md"
				>
					<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
					</svg>
					<span class="hidden sm:inline ml-2">Edit</span>
				</a>
			</div>
			
			<div class="flex items-center justify-center space-x-4 py-2 sm:py-4">
				<button 
					class="btn btn-primary btn-circle btn-md sm:btn-lg transition-transform active:scale-95"
					hx-post={ fmt.Sprintf("/gauges/%d/decrement", gauge.ID) }
					hx-target={ fmt.Sprintf("#gauge-%d", gauge.ID) }
					hx-swap="outerHTML"
					hx-push-url="false"
					hx-indicator={ fmt.Sprintf("#loading-%d", gauge.ID) }
				>
					<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
					</svg>
				</button>
				
				<div class="text-center relative">
					<div class="flex items-center justify-center h-20 w-20 sm:h-28 sm:w-28 transition-all">
						if value > gauge.Target {
							<div class="text-error animate-pulse">
								@Icon(gauge.Icon, "h-12 w-12 sm:h-16 sm:w-16")
							</div>
						} else {
							<div class="text-primary">
								@Icon(gauge.Icon, "h-12 w-12 sm:h-16 sm:w-16")
							</div>
						}
						<div 
							id={ fmt.Sprintf("loading-%d", gauge.ID) }
							class="htmx-indicator loading loading-spinner loading-md absolute"
						></div>
					</div>
					<div class="mt-2">
						<span class="text-xl sm:text-2xl font-bold">{ fmt.Sprintf("%.1f", value) }</span>
						<span class="text-base-content/70">{ gauge.Unit }</span>
					</div>
					<div class="text-sm text-base-content/50">
						Target: { fmt.Sprintf("%.1f", gauge.Target) }
						if gauge.Description.Valid {
							<div class="tooltip tooltip-bottom" data-tip={ gauge.Description.String }>
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-4 h-4 stroke-current ml-1"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
							</div>
						}
					</div>
				</div>

				<button 
					class="btn btn-primary btn-circle btn-md sm:btn-lg transition-transform active:scale-95"
					hx-post={ fmt.Sprintf("/gauges/%d/increment", gauge.ID) }
					hx-target={ fmt.Sprintf("#gauge-%d", gauge.ID) }
					hx-swap="outerHTML"
					hx-push-url="false"
					hx-indicator={ fmt.Sprintf("#loading-%d", gauge.ID) }
				>
					<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
					</svg>
				</button>
			</div>

			if gauge.Description.Valid {
				<p class="text-sm text-base-content/70 text-center sm:hidden mt-2">{ gauge.Description.String }</p>
			}
		</div>
	</div>
}

templ Gauge(gauge *db.Gauge) {
	<div class="card bg-base-100 shadow-xl transition-all hover:shadow-2xl">
		<div class="card-body p-4 sm:p-6">
			<div class="flex items-center justify-between">
				<h2 class="card-title text-lg sm:text-xl">{ gauge.Name }</h2>
				<div class="text-primary">
					@Icon(gauge.Icon, "h-6 w-6 sm:h-8 sm:w-8")
				</div>
			</div>
			if gauge.Description.Valid {
				<p class="text-base-content/70 text-sm sm:text-base">{ gauge.Description.String }</p>
			}
			<div class="flex flex-col sm:flex-row items-center gap-4 mt-4">
				<div class="stats shadow w-full sm:w-auto">
					<div class="stat px-4 sm:px-6">
						<div class="stat-title">Current</div>
						<div class="stat-value text-2xl sm:text-3xl">{ fmt.Sprintf("%.1f", gauge.Value) }</div>
						<div class="stat-desc">{ gauge.Unit }</div>
					</div>
					<div class="stat px-4 sm:px-6">
						<div class="stat-title">Target</div>
						<div class="stat-value text-2xl sm:text-3xl">{ fmt.Sprintf("%.1f", gauge.Target) }</div>
						<div class="stat-desc">{ gauge.Unit }</div>
					</div>
				</div>
			</div>
			<div class="card-actions justify-end mt-4 gap-2">
				<form
					method="POST"
					action={ templ.SafeURL(fmt.Sprintf("/gauges/%d/decrement", gauge.ID)) }
					hx-boost="true"
					hx-target={ fmt.Sprintf("#gauge-%d", gauge.ID) }
					hx-swap="outerHTML"
					class="flex-none"
				>
					<button 
						type="submit" 
						class="btn btn-primary btn-outline btn-sm sm:btn-md transition-transform active:scale-95"
					>
						<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
						</svg>
					</button>
				</form>
				<form
					method="POST"
					action={ templ.SafeURL(fmt.Sprintf("/gauges/%d/increment", gauge.ID)) }
					hx-boost="true"
					hx-target={ fmt.Sprintf("#gauge-%d", gauge.ID) }
					hx-swap="outerHTML"
					class="flex-none"
				>
					<button 
						type="submit" 
						class="btn btn-primary btn-outline btn-sm sm:btn-md transition-transform active:scale-95"
					>
						<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
						</svg>
					</button>
				</form>
				<a
					href={ templ.SafeURL(fmt.Sprintf("/admin/gauges/%d", gauge.ID)) }
					class="btn btn-primary btn-outline btn-sm sm:btn-md transition-transform active:scale-95"
				>
					<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
					</svg>
					<span class="hidden sm:inline ml-2">Edit</span>
				</a>
				<form
					method="DELETE"
					action={ templ.SafeURL(fmt.Sprintf("/admin/gauges/%d", gauge.ID)) }
					hx-boost="true"
					hx-target="closest .card"
					class="flex-none"
				>
					<button 
						type="submit" 
						class="btn btn-error btn-outline btn-sm sm:btn-md transition-transform active:scale-95"
					>
						<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
						</svg>
						<span class="hidden sm:inline ml-2">Delete</span>
					</button>
				</form>
			</div>
		</div>
	</div>
}

func getIconColor(value float64, target float64) string {
	if value > target {
		return "text-red-500"
	}
	return "text-green-500"
}
